# Projects
### v0.03 -- Notecards Release
##### Small-ish Self-Contained Test & Practice Projects
This repo contains small-ish one off projects that I have used as practice, entertainment, and idea testing for Harmony library.

---
## The Projects

#### NOTE: Each project has its own README.mkd for more specific details on that project

#### NOTE: Most projects are using `Harmony` in some way, primarily most of the gui elements are part of `Harmony/sfml/gui/gui.h`

---
### Project Euler Problems ( *./project_euler/* )
Set of Mathematical Practice Coding Problems from [Project Euler Site](https://projecteuler.net/)

---
### K Nearest Neighbors - Interactive ( *./k\_nearest\_neighbors/* )
Interactive Visualizer of k-nearest neighbors algorithm for different metrics

Currently:

* **L1** or *City Block / Int*
* **L2** or *Euclidean / Float* Metrics

#### INT MODE :
Int mode allows using **L1** Norm and has a more blocky visual ( int positioning )

![SELECTING SCREENCAP](https://github.com/b-j-roberts/Projects/raw/master/demos/k_nearest_neighbors/int_selecting_screencap_2.gif)
![RESPONSIVE SCREENCAP](https://github.com/b-j-roberts/Projects/raw/master/demos/k_nearest_neighbors/int_responsive_screencap.gif)

#### FLOAT MODE :
Float mode allows using **L2** Norm and has a more open space visual ( float positioning )
![RESPONSIVE SCREENCAP](https://github.com/b-j-roberts/Projects/raw/master/demos/k_nearest_neighbors/float_responsive_screencap.gif)

##### There is also persistence when switching between modes!

![PERSISTENCE SCREENCAP](https://github.com/b-j-roberts/Projects/raw/master/demos/k_nearest_neighbors/mode_persistence_screencap.gif)

---
### Charged Particle Simulator - Interactive ( *./charged_particles/* )
Interactive Visualizer of charged & massed particles in Torus Space ( NOTE : Particles have no collision )


Red ( negative ) & Blue ( positive ) particles interact; The attractions and motions loop back around making the interactions in torus space.

![DEMO VIDEO](https://github.com/b-j-roberts/Projects/raw/master/demos/charged_particles/charge_miniclip.gif)

You can insert objects at random ( random entry velocity, mass, and charge )

![RANDOM INTERACTIONS](https://github.com/b-j-roberts/Projects/raw/master/demos/charged_particles/random_charged_screencap.gif)

Or you can pause the simulation and meticulously place things where you want with whatever properties desired ( within their limits )

![INTERACTIONS](https://github.com/b-j-roberts/Projects/raw/master/demos/charged_particles/explosion_charged_screencap.gif)

NOTE : Poke mode creates a point charge, that cannot be seen, with selected properties exactly where clicking with the mouse
NOTE : You see how the particles ( because of connected torus space and uniform charge ) create a nice lattice structure very quickly ( before the Blue one come in )!

---
### Notecards App ( *./notecards/* )
Application that loads arbitarily many flashcards, each with arbitrarily many faces, from a file. ( Progress bar on the bottom )

After loading it allows you to flip faces, go to random cards & remove cards from deck ( to study like flashcards )

I personally love using it for Japanese cards, so I can have one face for Kanji, one for Hiragana, and one english.

![DEMO VIDEO](https://github.com/b-j-roberts/Projects/raw/master/demos/notecards/notecard_demo_screencap.gif)

---
### Incomplete
* Chess ( *./chess/* )


---
### TO DO
* README for each individual project
* Mention `Harmony/sfml/gui/gui.h` in overall note

---
### Future Ideas
* Sudoku
* UML Diagram Drawer ( after this : code generation from UML ? )
* Emoji Based Programming language
* Sort Algorithm Visualizer
* Recursive Shapes Creator
* Particle Simulator
* Ray Casting
* Path Finding ( A*, ... )
